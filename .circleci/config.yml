version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/circleci-demo-java-spring # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      - run:
          name: Install Chrome
          steps:
              - run:
                  command: >
                           if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi


                           # download chrome

                           curl --silent --show-error --location --fail --retry 3 \
                             --output google-chrome-stable_current_amd64.deb \
                             https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

                           # setup chrome installation

                           $SUDO dpkg -i google-chrome-stable_current_amd64.deb || $SUDO apt-get
                           -fy install


                           rm -rf google-chrome-stable_current_amd64.deb


                           $SUDO sed -i 's|HERE/chrome"|HERE/chrome" --disable-setuid-sandbox
                           --no-sandbox|g' \
                               "/opt/google/chrome/google-chrome"

                           # verify version

                           google-chrome --version

      - run: mvn clean test # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar

